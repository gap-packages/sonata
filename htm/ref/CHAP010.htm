<html><head><title>[SONATA] 10 Nearfields, planar nearrings and weakly divisible nearrings</title></head>
<body text="#000000" bgcolor="#ffffff">
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP009.htm">Previous</a>] [<a href ="CHAP011.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<h1>10 Nearfields, planar nearrings and weakly divisible nearrings</h1><p>
<P>
<H3>Sections</H3>
<oL>
<li> <A HREF="CHAP010.htm#SECT001">Dickson numbers</a>
<li> <A HREF="CHAP010.htm#SECT002">Dickson nearfields</a>
<li> <A HREF="CHAP010.htm#SECT003">Exceptional nearfields</a>
<li> <A HREF="CHAP010.htm#SECT004">Planar nearrings</a>
<li> <A HREF="CHAP010.htm#SECT005">Weakly divisible nearrings</a>
</ol><p>
<p>
A <strong>nearfield</strong> is a nearring with 1 where each nonzero element has a
multiplicative inverse. The (additive) group reduct of a finite
nearfield is necessarily elementary abelian. 
For an exposition of nearfields we refer to <a href="biblio.htm#Waehling:Fastkoerper"><[>Waehling:Fastkoerper</cite></a>].
<p>
Let (<i>N</i>,+,&#183;) be a left nearring. For <i>a</i>,<i>b</i>  <font face="symbol">Î</font> <i>N</i> we define <i>a</i>  <font face="symbol">º</font> <i>b</i>
iff <i>a</i>&#183;<i>n</i> = <i>b</i>&#183;<i>n</i> for all <i>n</i> <font face="symbol">Î</font> <i>N</i>. If <i>a</i>  <font face="symbol">º</font> <i>b</i>, then <i>a</i> and <i>b</i>
are called <strong>equivalent multipliers</strong>.
A nearring <i>N</i> is called <strong>planar</strong> if <font face="symbol">|</font> <i>N</i>/<sub> <font face="symbol">º</font> </sub> <font face="symbol">|</font>  <font face="symbol">³</font> 3 and if 
for any two non-equivalent multipliers <i>a</i> and <i>b</i> in <i>N</i>, for any <i>c</i> <font face="symbol">Î</font> <i>N</i>, 
the equation <i>a</i>&#183;<i>x</i> = <i>b</i>&#183;<i>x</i> + <i>c</i> has a unique solution. 
See <a href="biblio.htm#Clay:Nearrings"><[>Clay:Nearrings</cite></a>] for basic results on planar nearrings. 
<p>
All finite nearfields are planar nearrings.
<p>
A left nearring (<i>N</i>,+,&#183;) is called <strong>weakly divisible</strong> if 
<font face="symbol">"</font><i>a</i>,<i>b</i> <font face="symbol">Î</font> <i>N</i> <font face="symbol">$</font><i>x</i> <font face="symbol">Î</font> <i>N</i> : <i>a</i>&#183;<i>x</i> = <i>b</i> or <i>b</i>&#183;<i>x</i> = <i>a</i>.  
<p>
All finite integral planar nearrings are weakly divisible.
<p>
<p>
<h2><a name="SECT001">10.1 Dickson numbers</a></h2>
<p><p>
<a name = "SSEC001.1"></a>
<li><code>IsPairOfDicksonNumbers( </code><var>q</var><code>, </code><var>n</var><code> )</code>
<p>
A pair of Dickson numbers (<i>q</i>,<i>n</i>) consists of a prime power integer <i>q</i>
and a natural number <i>n</i> such that for <i>p</i> = 4 or <i>p</i> prime, <i>p</i><font face="symbol">|</font><i>n</i> implies
<i>p</i><font face="symbol">|</font><i>q</i><font face="symbol">-</font>1.
<p>
<pre>
    gap&gt; IsPairOfDicksonNumbers( 5, 4 );
    true
</pre>
<p>
<p>
<h2><a name="SECT002">10.2 Dickson nearfields</a></h2>
<p><p>
<a name = "SSEC002.1"></a>
<li><code>DicksonNearFields( </code><var>q</var><code>, </code><var>n</var><code> )</code>
<p>
All finite nearfields with 7 exceptions can be obtained via socalled
coupling maps from finite fields. These nearfields are called Dickson
nearfields.
<p>
The multiplication map of such a Dickson nearfield is given by a pair of
Dickson numbers (<i>q</i>,<i>n</i>) in the following way:
<p>
Let <i>F</i> = <i>GF</i>(<i>q</i><sup><i>n</i></sup>) and <i>w</i> be a primitive element of <i>F</i>. Let
<i>H</i> be the subgroup of (<i>F</i>\{0},&#183;) generated by <i>w</i><sup><i>n</i></sup>.
Then {<i>w</i><sup>(<i>q</i><sup><i>i</i></sup><font face="symbol">-</font>1)/(<i>q</i><font face="symbol">-</font>1)</sup>&nbsp;<font face="symbol">|</font>&nbsp;0 <font face="symbol">£</font> <i>i</i> <font face="symbol">£</font> <i>n</i><font face="symbol">-</font>1 } is a set of coset
representatives of <i>H</i> in <i>F</i>\{0}.
For <i>f</i> <font face="symbol">Î</font> <i>Hw</i><sup>(<i>q</i><sup><i>i</i></sup><font face="symbol">-</font>1)/(<i>q</i><font face="symbol">-</font>1)</sup> and <i>x</i> <font face="symbol">Î</font> <i>F</i> define <i>f</i>*<i>x</i> = <i>f</i>&#183;<i>x</i><sup><i>q</i><sup><i>i</i></sup></sup>
and 0*<i>x</i> = 0. Then * is a nearfield multiplication on the additive group
(<i>F</i>,+). 
<p>
Note that a Dickson nearfield is not uniquely determined by (<i>q</i>,<i>n</i>), since
<i>w</i> can be chosen arbitrarily. Different choices of <i>w</i> may yield isomorphic 
nearfields.
<p>
<code>DicksonNearFields</code> returns a list of the non-isomorphic Dickson nearfields
determined by the pair of Dickson numbers (<i>q</i>,<i>n</i>)
<p>
<pre>
    gap&gt; DicksonNearFields( 5, 4 );
    [ ExplicitMultiplicationNearRing ( &lt;pc group of size 625 with 
        4 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 625 with 
        4 generators&gt; , multiplication ) ]
</pre>
<p>
<a name = "SSEC002.2"></a>
<li><code>NumberOfDicksonNearFields( </code><var>q</var><code>, </code><var>n</var><code> )</code>
<p>
<code>NumberOfDicksonNearFields</code> returns the number of non-isomorphic Dickson
nearfields which can be obtained from a pair of Dickson numbers (<i>q</i>,<i>n</i>).
This number is given by <font face="symbol">F</font>(<i>n</i>)/<i>k</i>. Here <font face="symbol">F</font>(<i>n</i>) denotes the number
of relatively prime residues modulo <i>n</i> and <i>k</i> is the multiplicative order 
of <i>p</i> modulo <i>n</i> where <i>p</i> is the prime divisor of <i>q</i>.
<p>
<pre>
    gap&gt; NumberOfDicksonNearFields( 5, 4 );
    2
</pre>
<p>
<p>
<h2><a name="SECT003">10.3 Exceptional nearfields</a></h2>
<p><p>
<a name = "SSEC003.1"></a>
<li><code>ExceptionalNearFields( </code><var>q</var><code> )</code>
<p>
There are 7 finite nearfields which cannot be obtained from finite fields
via a Dickson process. They are of size <i>p</i><sup>2</sup> for
<i>p</i> = 5, 7, 11, 11, 23, 29, 59. (There exist 2 exceptional nearfields of size
121.)
<p>
<code>ExceptionalNearFields</code> returns the list of exceptional nearfields for a given
size <var>q</var>.
<p>
<pre>
    gap&gt; ExceptionalNearFields( 25 );
    [ ExplicitMultiplicationNearRing ( &lt;pc group of size 25 with 
        2 generators&gt; , multiplication ) ]
</pre>
<p>
<a name = "SSEC003.2"></a>
<li><code>AllExceptionalNearFields()</code>
<p>
There are 7 finite nearfields which cannot be obtained from finite fields
via a Dickson process. They are of size <i>p</i><sup>2</sup> for
<i>p</i> = 5, 7, 11, 11, 23, 29, 59. (There exist 2 exceptional nearfields of size
121.)
<p>
<code>AllExceptionalNearFields</code> without argument returns the list of exceptional
nearfields.
<p>
<pre>
    gap&gt; AllExceptionalNearFields();
    [ ExplicitMultiplicationNearRing ( &lt;pc group of size 25 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 49 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 121 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 121 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 529 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 841 with 
        2 generators&gt; , multiplication ), 
      ExplicitMultiplicationNearRing ( &lt;pc group of size 3481 with 
        2 generators&gt; , multiplication ) ]
</pre>
<p>
<p>
<h2><a name="SECT004">10.4 Planar nearrings</a></h2>
<p><p>
<a name = "SSEC004.1"></a>
<li><code>PlanarNearRing( </code><var>G</var><code>, </code><var>phi</var><code>, </code><var>reps</var><code> )</code>
<p>
A finite <strong>Ferrero pair</strong> is a pair of groups (<i>N</i>,<font face="symbol">F</font>) where <font face="symbol">F</font> is a
fixed-point-free automorphism group of (<i>N</i>,+).   
<p>
Starting with a Ferrero pair (<i>N</i>,<font face="symbol">F</font>) we can construct a planar nearring
in the following way, <a href="biblio.htm#Clay:Nearrings"><[>Clay:Nearrings</cite></a>:]
Select representatives, say <i>e</i><sub>1</sub>,<font face="symbol">¼</font>,<i>e</i><sub><i>t</i></sub>, for some or all of the
non-trivial orbits of <i>N</i> under <font face="symbol">F</font>. 
Let <i>C</i> = <font face="symbol">F</font>(<i>e</i><sub>1</sub>)<font face="symbol">È</font><font face="symbol">¼</font><font face="symbol">È</font><font face="symbol">F</font>(<i>e</i><sub><i>t</i></sub>).
For each <i>x</i> <font face="symbol">Î</font> <i>N</i> we define <i>a</i> * <i>x</i> = 0 for <i>a</i> <font face="symbol">Î</font> <i>N</i>\<i>C</i>, and 
<i>a</i> * <i>x</i>=<font face="symbol">f</font><sub><i>a</i></sub>(<i>x</i>) for <i>a</i> <font face="symbol">Î</font> <font face="symbol">F</font>(<i>e</i><sub><i>i</i></sub>) <font face="symbol">Ì</font> <i>C</i> and <font face="symbol">f</font><sub><i>a</i></sub>(<i>e</i><sub><i>i</i></sub>)=<i>a</i>.
Then (<i>N</i>,+,*) is a (left) planar nearring.
<p>
Every finite planar nearring can be constructed from some Ferrero pair 
together with a set of orbit representatives in this way.
<p>
<code>PlanarNearRing</code> returns the planar nearring on the group <var>G</var> determined by 
the fixed-point-free automorphism group <var>phi</var> and the list of chosen orbit 
representatives <var>reps</var>.
<p>
<pre>
    gap&gt; C7 := CyclicGroup( 7 );;
    gap&gt; i := GroupHomomorphismByFunction( C7, C7, x -&gt; x^-1 );;
    gap&gt; phi := Group( i );;
    gap&gt; orbs := Orbits( phi, C7 );
    [ [ &lt;identity&gt; of ... ], [ f1, f1^6 ], [ f1^2, f1^5 ], 
      [ f1^3, f1^4 ] ]
    gap&gt; # choose reps from the orbits 
    gap&gt; reps := [orbs[2][1], orbs[3][2]];
    [ f1, f1^5 ]
    gap&gt; n := PlanarNearRing( C7, phi, reps );
    ExplicitMultiplicationNearRing ( &lt;pc group of size 7 with 
    1 generators&gt; , multiplication )
</pre>
<p>
<a name = "SSEC004.2"></a>
<li><code>OrbitRepresentativesForPlanarNearRing( </code><var>G</var><code>, </code><var>phi</var><code>, </code><var>i</var><code> )</code>
<p>
Let (<i>N</i>,<font face="symbol">F</font>) be a Ferrero pair, and let <i>E</i> = { <i>e</i><sub>1</sub>,<font face="symbol">¼</font>,<i>e</i><sub><i>s</i></sub> } and
<i>F</i> = { <i>f</i><sub>1</sub>,<font face="symbol">¼</font>,<i>f</i><sub><i>t</i></sub> } be two sets of non-zero orbit representatives.
The nearring obtained from <i>N</i>,<font face="symbol">F</font>, <i>E</i> by the Ferrero construction
(see <code>PlanarNearRing</code>) is isomorphic to the nearring obtained from <i>N</i>,<font face="symbol">F</font>, <i>F</i>
iff there exists an automorphism <font face="symbol">a</font> of (<i>N</i>,+) that normalizes <font face="symbol">F</font>
such that
{ <font face="symbol">a</font>(<i>e</i><sub>1</sub>),<font face="symbol">¼</font>,<font face="symbol">a</font>(<i>e</i><sub><i>s</i></sub>) } = { <i>f</i><sub>1</sub>,<font face="symbol">¼</font>,<i>f</i><sub><i>t</i></sub> }.
<p>
The function <code>OrbitRepresentativesForPlanarNearRing</code> 
returns precisely one set of representatives of cardinality <var>i</var> for each 
isomorphism class of planar nearrings which can be generated from the 
Ferrero pair ( <var>G</var>, <var>phi</var> ).
<p>
<pre>
    gap&gt; C7 := CyclicGroup( 7 );;
    gap&gt; i := GroupHomomorphismByFunction( C7, C7, x -&gt; x^-1 );;
    gap&gt; phi := Group( i );;
    gap&gt; reps := OrbitRepresentativesForPlanarNearRing( C7, phi, 2 );
    [ [ f1, f1^2 ], [ f1, f1^5 ] ]
    gap&gt; n1 := PlanarNearRing( C7, phi, reps[1] );;
    gap&gt; n2 := PlanarNearRing( C7, phi, reps[2] );;
    gap&gt; IsIsomorphicNearRing( n1, n2 );
    false
</pre>
<p>
<p>
<h2><a name="SECT005">10.5 Weakly divisible nearrings</a></h2>
<p><p>
<a name = "SSEC005.1"></a>
<li><code>WdNearRing( </code><var>G</var><code>, </code><var>psi</var><code>, </code><var>phi</var><code>, </code><var>reps</var><code> )</code>
<p>
Every finite (left) weakly divisible nearring (<i>N</i>,+,&#183;) can be constructed
in the following way:
<p>
(1) Let <font face="symbol">y</font> be an endomorphism of the group (<i>N</i>,+) such that Ker
<font face="symbol">y</font> =  Image <font face="symbol">y</font><sup><i>r</i><font face="symbol">-</font>1</sup> for some integer <i>r</i>, <i>r</i> &gt; 0. (Let <font face="symbol">y</font><sup>0</sup> := id.)
<p>
(2) Let <font face="symbol">F</font> be an automorphism group of (<i>N</i>,+) such that
<font face="symbol">y</font><font face="symbol">F</font> <font face="symbol">Í</font> <font face="symbol">F</font><font face="symbol">y</font> and <font face="symbol">F</font> acts fixed-point-free on
<i>N</i>\ Image <font face="symbol">y</font>.
(That is, for each
<font face="symbol">j</font> <font face="symbol">Î</font> <font face="symbol">F</font> there exists <font face="symbol">j</font><font face="symbol">¢</font> <font face="symbol">Î</font> <font face="symbol">F</font> such that
<font face="symbol">y</font><font face="symbol">j</font> =  <font face="symbol">j</font><font face="symbol">¢</font><font face="symbol">y</font> and for all <i>n</i> <font face="symbol">Î</font> <i>N</i>\ Image <font face="symbol">y</font> the 
equality <i>n</i><sup><font face="symbol">j</font></sup> = <i>n</i> implies <font face="symbol">j</font> =  id. Note that our functions
operate from the right just like GAP-mappings do.)
<p>
(3) Let <i>E</i> <font face="symbol">Í</font> <i>N</i> be a complete set of orbit representatives for
<font face="symbol">F</font> on <i>N</i>\ Image <font face="symbol">y</font>, such that for all <i>e</i><sub>1</sub>, <i>e</i><sub>2</sub> <font face="symbol">Î</font> <i>E</i>, for all
<font face="symbol">j</font> <font face="symbol">Î</font> <font face="symbol">F</font> and for all 1  <font face="symbol">£</font> <i>i</i>  <font face="symbol">£</font> <i>r</i><font face="symbol">-</font>1 the equality
<i>e</i><sub>1</sub><sup><font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup></sup> = <i>e</i><sub>2</sub><sup><font face="symbol">y</font><sup><i>i</i></sup></sup> implies <font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup> = <font face="symbol">y</font><sup><i>i</i></sup>.
<p>
Then for all <i>n</i> <font face="symbol">Î</font> <i>N</i>, <i>n</i> <font face="symbol">¹</font> 0, there are <i>i</i> <font face="symbol">³</font> 0 ,<font face="symbol">j</font> <font face="symbol">Î</font> <font face="symbol">F</font> and
<i>e</i> <font face="symbol">Î</font> <i>E</i> such that <i>n</i> = <i>e</i><sup><font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup></sup>; furthermore, for fixed <i>n</i>, the
endomorphism <font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup> is independent of the choice of <i>e</i> and
<font face="symbol">j</font> in the representation of <i>n</i>. 
<p>
For all <i>x</i> <font face="symbol">Î</font> <i>N</i>, <i>e</i> <font face="symbol">Î</font> <i>E</i>,<font face="symbol">j</font> <font face="symbol">Î</font> <font face="symbol">F</font> and <i>i</i> <font face="symbol">³</font> 0 define 0&#183;<i>x</i> : = 0
and
    <br clear="all" /><table border="0" width="100%"><tr><td><table align="center" cellspacing="0"  cellpadding="2"><tr><td nowrap="nowrap" align="center"> <i>e</i><sup><font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup></sup>&#183;<i>x</i> : = <i>x</i><sup><font face="symbol">j</font><font face="symbol">y</font><sup><i>i</i></sup></sup> </td></tr></table></td></tr></table>
Then (<i>N</i>,+,&#183;) is a zerosymmetric (left) wd nearring. 
<p>
<code>WdNearRing</code> returns the wd nearring on the group <var>G</var> as defined above
by the nilpotent endomorphism <var>psi</var>, the automorphism group <var>phi</var> and
a list of orbit representatives <var>reps</var> where the arguments fulfill the
conditions (1) to (3).
<p>
<pre>
    gap&gt; C9 := CyclicGroup( 9 );;
    gap&gt; psi := GroupHomomorphismByFunction( C9, C9, x -&gt; x^3 );;
    gap&gt; Image( psi );
    Group([ f2, &lt;identity&gt; of ... ])
    gap&gt; Image( psi ) = Kernel( psi );
    true
    gap&gt; a := GroupHomomorphismByFunction( C9, C9, x -&gt; x^4 );;
    gap&gt; phi := Group( a );;
    gap&gt; Size( phi );
    3
    gap&gt; orbs := Orbits( phi, C9 );
    [ [ &lt;identity&gt; of ... ], [ f2 ], [ f2^2 ], [ f1, f1*f2, f1*f2^2 ],
      [ f1^2, f1^2*f2^2, f1^2*f2 ] ]
    gap&gt; # choose reps from the orbits outside of Image( psi )
    gap&gt; reps := [orbs[4][1], orbs[5][1]];
    [ f1, f1^2 ]
    gap&gt; n := WdNearRing( C9, psi, phi, reps );
    ExplicitMultiplicationNearRing ( &lt;pc group of size 9 with
    2 generators&gt; , multiplication )
</pre>
<p>
<p>
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP009.htm">Previous</a>] [<a href ="CHAP011.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>SONATA manual<br>October 2018
</address></body></html>